/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}
apply plugin: "application"

repositories {
    // Use Maven Central for resolving dependencies.
     flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: "$project.projectDir/build/libs", include: ['*.jar'])
    implementation files("$buildDir/classes/java/test")
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.7.1'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.seleniumhq.selenium:selenium-java:4.8.1'
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.1'
    implementation group: 'org.json', name: 'json', version: '20220924'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation "org.slf4j:slf4j-api:2.0.6"
    implementation 'org.slf4j:slf4j-log4j12:2.0.6'
    implementation 'com.mysql:mysql-connector-j:8.0.32'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'

}

sourceSets {
    test {
        java {
            srcDir 'src/test/java'
            srcDir 'src/resources'
        }
    }
}
test {
    // Use TestNG
    useTestNG(){
     includeGroups System.getProperty('tag', 'SmokeTest')
     includeGroups System.getProperty('tag','RegressionTest')
     includeGroups System.getProperty('tag','ApiTest')
    }
    testLogging {
    afterSuite { desc, result ->
      if (!desc.parent) { // will match the outermost suite
        println "Results: ${result.resultType} (TOTAL TESTS: ${result.testCount}, SUCCESS: ${result.successfulTestCount} ,  FAILURES:  ${result.failedTestCount} ,  SKIPPED  ${result.skippedTestCount} )"
      }
    }
  }
    systemProperty 'browser', System.getProperty('browser','chrome')   
    systemProperty 'log', System.getProperty('log','INFO')  
}

